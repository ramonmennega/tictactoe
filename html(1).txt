
import (
	"database/sql"
	"fmt"
	"log"
	"net/http"
	"strconv"
)

func loggedin(w http.ResponseWriter, r *http.Request) {
	http.ServeFile(w, r, "api/login.html")
	log.Println("Ingelogd")
}

func login(w http.ResponseWriter, r *http.Request) {

	db, err := sql.Open("mysql", "root:@tcp(127.0.0.1:3306)/account")
	if err != nil {
		panic(err)
	}
	r.ParseForm()
	var username = r.PostFormValue("username")
	var password = r.PostFormValue("password")
	fmt.Println(username)
	fmt.Println(password)

	stringsql := fmt.Sprintf("SELECT password FROM login WHERE username = '%s'", username)
	rows, err := db.Query(stringsql)
	if err != nil {
		fmt.Println("error", err)
		return
	}
	var x bool

	if x {
		fmt.Println("succes")
		log.Println("Ingelogd")
	} else {
		fmt.Println("geen succes")
		log.Println("Fout ingelogd")
	}
	rows.Close()
}

func registering(w http.ResponseWriter, r *http.Request) {
	http.ServeFile(w, r, "api/register.html")
	log.Println("Geregistreerd")
}

func register(w http.ResponseWriter, r *http.Request) {
	db, err := sql.Open("mysql", "root:@tcp(127.0.0.1:3306)/account")
	if err != nil {
		panic(err)
	}
	r.ParseForm()
	var username = r.PostFormValue("username")
	var password = r.PostFormValue("password")

	stringsql := fmt.Sprintf("INSERT INTO login(username, password) VALUES('%s', '%s')", username, password)
	rows, err := db.Query(stringsql)
	if err != nil {
		panic(err)
	}
	defer db.Close()
	rows, err = db.Query("SELECT * FROM login")

	for rows.Next() {
		var username string
		var password string
		err = rows.Scan(&username, &password)
	}
	rows.Close()
}



func main() {

	log.Fatal(http.ListenAndServe(":8080", nil))

}
